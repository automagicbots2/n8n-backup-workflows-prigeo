{
  "active": true,
  "connections": {
    "formata_dados": {
      "main": [
        [
          {
            "node": "dados_gerais",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "compra_aprovada": {
      "main": [
        [
          {
            "node": "consulta_venda_hotmart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "consulta_venda_hotmart": {
      "main": [
        [
          {
            "node": "consulta_users_hotmart",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "consulta_users_hotmart": {
      "main": [
        [
          {
            "node": "formata_dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_gerais": {
      "main": [
        [
          {
            "node": "entra_na_fila",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-05-01T15:01:41.223Z",
  "id": "9vlez9t0K40a10xw",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[CSP] - Compra Aprovada - Parte 1",
  "nodes": [
    {
      "parameters": {
        "jsCode": "const compraAprovada = $node[\"compra_aprovada\"].json;\nconst consultaVenda = $item(0).$node[\"consulta_venda_hotmart\"].json;\nconst consultaUsers = $node[\"consulta_users_hotmart\"].json;\n\n// Função para formatar data em dia/mês/ano\nfunction formatDate(timestamp) {\n  if (!timestamp) return '';\n  const date = new Date(timestamp * 1000);\n  const day = date.getDate().toString().padStart(2, '0');\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}/${month}/${year}`;\n}\n\nconst moedaCompra = compraAprovada.body.data.purchase.original_offer_price.currency_value || '';\n\n// Mapeamento das formas de pagamento em inglês para PT-BR\nconst formasPagamento = {\n  CREDIT_CARD: \"Cartão de Crédito\",\n  PIX: \"PIX\",\n  BILLET: \"Boleto\",\n  PAYPAL: \"PayPal\",\n  WALLET: \"Carteira da Hotmart\",\n  FINANCED_BILLET: \"Boleto Parcelado\",\n  CASH_PAYMENT: \"Dinheiro Vivo\",\n  DIRECT_BANK_TRANSFER: \"Transferência Bancária\",\n  DIRECT_DEBIT: \"Débito Direto\",\n  FINANCED_INSTALLMENT: \"Parcelamento Financiado\",\n  GOOGLE_PAY: \"Google Pay\",\n  HOTCARD: \"Cartão da Hotmart\",\n  HYBRID: \"Híbrido\",\n  MANUAL_TRANSFER: \"Transferência Manual\",\n  PAYPAL_INTERNACIONAL: \"PayPal Internacional\",\n  PICPAY: \"PicPay\"\n};\n\nconst ddd = consultaUsers?.items?.[0]?.users?.[1]?.user?.phone?.slice(0, 2) || '';\nconst plano = compraAprovada.body.data.subscription?.plan?.name || '';\n\n// Extrai a forma de pagamento em inglês\nconst formaPagamentoEmIngles = consultaVenda.items[0]?.purchase?.payment?.type || '';\nconst idTransacao = compraAprovada.body.data.purchase.transaction || '';\nconst codigoInscricao = compraAprovada.body.data.subscription?.subscriber?.code || '';\n\n// Obtém a forma de pagamento em PT-BR usando o mapeamento\nconst formaPagamentoEmPTBR = formasPagamento[formaPagamentoEmIngles] || '';\nconst ofertaCompra = consultaVenda.items[0]?.purchase?.offer?.code || '';\n\n// Dados extraídos e formatados\nconst dataPedidoFormatada = formatDate(compraAprovada.body.data.purchase.approved_date / 1000);\nconst dataGarantiaFormatada = formatDate(consultaVenda.items[0]?.purchase?.warranty_expire_date / 1000);\nconst nomeProduto = consultaUsers?.items?.[0]?.product?.name || '';\nconst nomeClienteOriginal = consultaUsers?.items?.[0]?.users?.[1]?.user?.name || '';\n\n// Função para formatar o nome com a primeira letra de cada parte em maiúscula\nfunction formatName(str) {\n  return str\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(' ');\n}\n\nconst nomeClienteFormatado = formatName(nomeClienteOriginal);\nconst emailCliente = consultaUsers?.items?.[0]?.users?.[1]?.user?.email.toLowerCase().replace(/\\s/g, '') || '';\n\n// Tratamento do número de telefone\nconst telefoneClienteOriginal = consultaUsers?.items?.[0]?.users?.[1]?.user?.phone || '';\nconst telefoneLimpo = telefoneClienteOriginal.replace(/\\D/g, \"\");\nconst DDI = '55';\nconst DDD = telefoneLimpo.slice(0, 2);\n\n// Verificar se 'tracking' existe e, em seguida, acessar 'source'\nconst tracking = consultaVenda.items[0]?.purchase?.tracking;\nconst plataformaOrigem = tracking && tracking.source?.split('-')[0] || '';\nconst temperaturaPublico = tracking && tracking.source?.split('-')[1] || '';\nconst publico = tracking && tracking.source?.split('-')[2] || '';\nconst posicionamento = tracking && tracking.source?.split('-')[3] || '';\nconst anuncio = tracking && tracking.source?.split('-')[4] || '';\n\nconst valorCompra = compraAprovada.body.data.purchase.full_price.value || '';\nconst comissaoHotmart = compraAprovada.body.data.commissions[0]?.value || ''; // Índice 0 para \"MARKETPLACE\"\nconst numeroParcelas = compraAprovada.body.data.purchase.payment.installments_number || '';\n\n// Determinar o número de telefone final\nlet telefoneFinal;\nif (parseInt(DDD) > 28) {\n  telefoneFinal = `${DDI}${DDD}${telefoneLimpo.slice(-8)}`;\n} else {\n  telefoneFinal = `${DDI}${DDD}${telefoneLimpo.slice(-9)}`;\n}\n\n// Encontre o valor do documento (CPF ou CNPJ) do comprador onde o 'role' é 'BUYER'\nlet cpfcnpj_cliente = null;\nconst users = $node[\"consulta_users_hotmart\"].json[\"items\"][0][\"users\"];\n\nif (users) {\n  const buyer = users.find(user => user.role === 'BUYER');\n  if (buyer) {\n    cpfcnpj_cliente = buyer.user.documents[0]?.value || null;\n  }\n}\n\nif (cpfcnpj_cliente) {\n  if (cpfcnpj_cliente.length === 11) {\n    // Formatar CPF (11 dígitos) XXX.XXX.XXX-XX\n    cpfcnpj_cliente = cpfcnpj_cliente.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  } else if (cpfcnpj_cliente.length === 14) {\n    // Formatar CNPJ (14 dígitos) XX.XXX.XXX/0001-XX\n    cpfcnpj_cliente = cpfcnpj_cliente.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\n  }\n}\n\n// Função para formatar o status da compra\nfunction formatPurchaseStatus(status) {\n  const statusMap = {\n    APPROVED: 'Compra Aprovada',\n    BLOCKED: 'Compra Bloqueada',\n    CANCELLED: 'Compra Cancelada',\n    CHARGEBACK: 'Chargeback',\n    COMPLETE: 'Compra Completa',\n    EXPIRED: 'Compra Expirada',\n    OVERDUE: 'Compra Atrasada',\n    NO_FUNDS: 'Sem Fundos',\n    PRINTED_BILLET: 'Boleto Gerado',\n    PARTIALLY_REFUNDED: 'Parcialmente Reembolsada',\n    PROCESSING_TRANSACTION: 'Processando Transação',\n    PRE_ORDER: 'Compra Reservada',\n    STARTED: 'Compra Iniciada',\n    PROTESTED: 'Compra Reclamada',\n    REFUNDED: 'Compra Reembolsada',\n    WAITING_PAYMENT: 'Aguardando Pagamento',\n    UNDER_ANALISYS: 'Em Análise',\n  };\n\n  return statusMap[status] || status;\n}\n\nconst purchaseStatus = formatPurchaseStatus($node[\"compra_aprovada\"].json[\"body\"][\"data\"][\"purchase\"][\"status\"]);\n\n// Output dos dados formatados\nreturn {\n  \"data_pedido\": dataPedidoFormatada,\n  \"data_garantia\": dataGarantiaFormatada,\n  \"forma_pagamento\": formaPagamentoEmPTBR,\n  \"nome_produto\": nomeProduto,\n  \"nome_cliente\": nomeClienteFormatado,\n  \"email_cliente\": emailCliente,\n  \"telefone_cliente\": telefoneFinal,\n  \"cpfcnpj_cliente\": cpfcnpj_cliente,\n  \"id_transacao\": idTransacao,\n  \"oferta_da_compra\": ofertaCompra,\n  \"moeda_da_compra\": moedaCompra,\n  \"codigo_da_inscricao\": codigoInscricao,\n  \"plano\": plano,\n  \"ddd\": ddd,\n  \"utm_source\": plataformaOrigem,\n  \"utm_campaign\": temperaturaPublico,\n  \"utm_term\": publico,\n  \"utm_medium\": posicionamento,\n  \"utm_content\": anuncio,\n  \"valor_compra\": valorCompra,\n  \"comissao_gateway\": comissaoHotmart,\n  \"numero_de_parcelas\": numeroParcelas,\n  \"status_da_compra\": purchaseStatus\n};\n"
      },
      "id": "ddb963ed-9c19-4e4c-b829-75ba150b2872",
      "name": "formata_dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1040,
        460
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "csp-compra-aprovada",
        "options": {}
      },
      "id": "3f8aa807-1923-4dba-abd3-dc41cadda3b6",
      "name": "compra_aprovada",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        460,
        460
      ],
      "webhookId": "46cbb61f-b0d5-4910-807a-23a2cd360ebb"
    },
    {
      "parameters": {
        "url": "https://developers.hotmart.com/payments/api/v1/sales/history",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "transaction",
              "value": "={{ $node[\"compra_aprovada\"].json[\"body\"][\"data\"][\"purchase\"][\"transaction\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "3bf9e15d-9ea6-4310-8a7d-4befdd164b34",
      "name": "consulta_venda_hotmart",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        660,
        460
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "CHJqRANFoJRHVfE2",
          "name": "[PRIGEO] - Hotmart"
        }
      }
    },
    {
      "parameters": {
        "url": "https://developers.hotmart.com/payments/api/v1/sales/users",
        "authentication": "genericCredentialType",
        "genericAuthType": "oAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "transaction",
              "value": "={{ $node[\"compra_aprovada\"].json[\"body\"][\"data\"][\"purchase\"][\"transaction\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6f5b3129-f5f5-46b4-a5b1-491398d7990c",
      "name": "consulta_users_hotmart",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        860,
        460
      ],
      "credentials": {
        "oAuth2Api": {
          "id": "CHJqRANFoJRHVfE2",
          "name": "[PRIGEO] - Hotmart"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Nome do Produto",
              "value": "={{ $node[\"formata_dados\"].json[\"nome_produto\"] }}"
            },
            {
              "name": "Nome do Cliente",
              "value": "={{ $node[\"formata_dados\"].json[\"nome_cliente\"] }}"
            },
            {
              "name": "E-mail do Cliente",
              "value": "={{ $node[\"formata_dados\"].json[\"email_cliente\"] }}"
            },
            {
              "name": "Telefone do Cliente",
              "value": "={{ $node[\"formata_dados\"].json[\"telefone_cliente\"] }}"
            },
            {
              "name": "CPF/CNPJ do Cliente",
              "value": "={{ $node[\"formata_dados\"].json[\"cpfcnpj_cliente\"] }}"
            },
            {
              "name": "ID da Transação",
              "value": "={{ $node[\"formata_dados\"].json[\"id_transacao\"] }}"
            },
            {
              "name": "Oferta da Compra",
              "value": "={{ $node[\"formata_dados\"].json[\"oferta_da_compra\"] }}"
            },
            {
              "name": "Moeda da Compra",
              "value": "={{ $node[\"formata_dados\"].json[\"moeda_da_compra\"] }}"
            },
            {
              "name": "Código da Inscrição",
              "value": "={{ $node[\"formata_dados\"].json[\"codigo_da_inscricao\"] }}"
            },
            {
              "name": "Plano",
              "value": "={{ $node[\"formata_dados\"].json[\"plano\"] }}"
            },
            {
              "name": "Forma de Pagamento",
              "value": "={{ $node[\"formata_dados\"].json[\"forma_pagamento\"] }}"
            },
            {
              "name": "Status da Compra",
              "value": "={{ $node[\"formata_dados\"].json[\"status_da_compra\"] }}"
            },
            {
              "name": "DDD",
              "value": "={{ $node[\"formata_dados\"].json[\"ddd\"] }}"
            },
            {
              "name": "Plataforma de Origem",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_source\"] }}"
            },
            {
              "name": "Temperatura do Público",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_campaign\"] }}"
            },
            {
              "name": "Público",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_term\"] }}"
            },
            {
              "name": "Posicionamento",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_medium\"] }}"
            },
            {
              "name": "Anúncio",
              "value": "={{ $node[\"formata_dados\"].json[\"utm_content\"] }}"
            },
            {
              "name": "id_campo_email_manychat",
              "value": "9802826"
            },
            {
              "name": "id_campo_transacao_manychat",
              "value": "9802825"
            },
            {
              "name": "id_fluxo_onboarding",
              "value": "2290507"
            },
            {
              "name": "id_campo_email_bc",
              "value": "1271599"
            },
            {
              "name": "id_campo_transacao_bc",
              "value": "1290192"
            },
            {
              "name": "id_campo_cpf_cnpj",
              "value": "631990"
            },
            {
              "name": "API-KEY",
              "value": "6f2ad020-2909-475d-bcc6-a2b9e6cd9131"
            },
            {
              "name": "TOKEN-MANYCHAT",
              "value": "102286468489164:25dfa5e2010d779c2cf0923b8c86d727"
            }
          ],
          "number": [
            {
              "name": "Valor da Compra",
              "value": "={{ $node[\"compra_aprovada\"].json[\"body\"][\"data\"][\"purchase\"][\"full_price\"][\"value\"] }}"
            },
            {
              "name": "Data da Compra",
              "value": "={{ $node[\"formata_dados\"].json[\"data_pedido\"] }}"
            },
            {
              "name": "Comissão Hotmart",
              "value": "={{ $node[\"formata_dados\"].json[\"comissao_gateway\"] }}"
            },
            {
              "name": "Número de Parcelas",
              "value": "={{ $node[\"formata_dados\"].json[\"numero_de_parcelas\"] }}"
            },
            {
              "name": "Data de Vencimento da Garantia",
              "value": "={{ $node[\"formata_dados\"].json[\"data_garantia\"] }}"
            }
          ]
        },
        "options": {
          "dotNotation": false
        }
      },
      "id": "afe1541d-d477-4b91-83c5-4668fff62c42",
      "name": "dados_gerais",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1220,
        460
      ]
    },
    {
      "parameters": {
        "queue": "Compra Aprovada - CSP",
        "options": {
          "arguments": {
            "argument": [
              {
                "key": "x-queue-type",
                "value": "quorum"
              }
            ]
          },
          "durable": true
        }
      },
      "id": "edb78bcf-5f1f-4fe3-aa9d-c2ac509f0ede",
      "name": "entra_na_fila",
      "type": "n8n-nodes-base.rabbitmq",
      "typeVersion": 1,
      "position": [
        1420,
        460
      ],
      "credentials": {
        "rabbitmq": {
          "id": "v10PciJKjFB8gCKb",
          "name": "[PRIGEO] - RabbitMQ"
        }
      }
    }
  ],
  "pinData": {
    "compra_aprovada": [
      {
        "json": {
          "headers": {
            "host": "n8nwebhookprigeo.amarads.com.br",
            "user-agent": "Jodd HTTP",
            "content-length": "1439",
            "content-type": "application/json",
            "x-forwarded-for": "54.80.103.168",
            "x-forwarded-host": "n8nwebhookprigeo.amarads.com.br",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "99d022a72141",
            "x-hotmart-hottok": "C0M0zxU3tOxl79rtObW21JucfNTfa006c2cecc-32a6-4356-b7a6-4327bf1cd88c",
            "x-real-ip": "54.80.103.168",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "data": {
              "product": {
                "has_co_production": true,
                "name": "Combo de cursos Prigeo: Sala de Professores",
                "id": 3301754,
                "ucode": "616b4e08-67b7-40ac-91a3-8253ab64f056"
              },
              "commissions": [
                {
                  "currency_value": "BRL",
                  "source": "MARKETPLACE",
                  "value": 1.39
                },
                {
                  "currency_value": "BRL",
                  "source": "PRODUCER",
                  "value": 0.43
                }
              ],
              "purchase": {
                "offer": {
                  "code": "aud7l0an"
                },
                "order_date": 1694561571000,
                "original_offer_price": {
                  "currency_value": "BRL",
                  "value": 6.96
                },
                "price": {
                  "currency_value": "BRL",
                  "value": 6.96
                },
                "checkout_country": {
                  "iso": "BR",
                  "name": "Brasil"
                },
                "buyer_ip": "187.114.195.135",
                "order_bump": {
                  "is_order_bump": false
                },
                "payment": {
                  "pix_qrcode": "https://customer-local-latam.ebanx.com/pix/checkout?hash=6500f523b4d5ac0cb3f24f41002df54b5b51a4db1404e11f",
                  "pix_expiration_date": 1694734372000,
                  "installments_number": 1,
                  "type": "PIX",
                  "pix_code": "00020101021226740014br.gov.bcb.pix2552pix.ebanx.com/qr/v2/23060E61174D298949678E47737DA04F5204000053039865802BR5924Launch Pad Tecnologia Se6014BELO HORIZONTE62070503***63041EB0"
                },
                "approved_date": 1694561612000,
                "full_price": {
                  "currency_value": "BRL",
                  "value": 6.96
                },
                "transaction": "HP0408613005",
                "status": "APPROVED"
              },
              "affiliates": [
                {
                  "affiliate_code": "",
                  "name": ""
                }
              ],
              "producer": {
                "name": "Prigeo Ensino e Tecnologia"
              },
              "buyer": {
                "name": "Gabriel Amaral Mota",
                "checkout_phone": "11968678789",
                "email": "ferramentas@automagicbots.com.br"
              }
            },
            "id": "db2035fe-ce60-4ce1-b138-d8fe509c038d",
            "creation_date": 1694561615897,
            "event": "PURCHASE_APPROVED",
            "version": "2.0.0"
          }
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "gH1eUtgMl91jy1fn"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-04-30T11:53:15.629Z",
      "updatedAt": "2024-04-30T11:53:15.629Z",
      "id": "H2161I9MxT1c0oWE",
      "name": "[PRI GEO]"
    },
    {
      "createdAt": "2024-05-03T20:20:38.896Z",
      "updatedAt": "2024-05-03T20:20:38.896Z",
      "id": "vkeEqzmarx4BYIBt",
      "name": "CSP"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-05-03T20:24:19.612Z",
  "versionId": "490c2a21-e702-4f7e-b534-cd4701252039"
}